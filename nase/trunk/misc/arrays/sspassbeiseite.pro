;+
; NAME:
;  SSpassBeiseite
;
; AIM:
;  Generate complete binary array from sparse version.
;  
; PURPOSE:
;  SSpassBeiseite returns a normal byte array containing 0s and 1s
;  from a sparse vector generated by <A HREF="#SSPASSMACHER">SSpassmacher</A>. 
;  
; CATEGORY:
;  MISCELLANEOUS / ARRAY OPERATIONS
;  
; CALLING SEQUENCE:
;  array = SSpassBeiseite(ssparse [,/DIMENSIONS])
;  
; INPUTS:
;  ssparse : onedimensional long array of the following structure:
;             ssparse(0) : number of elements NE 0 in array
;             ssparse(1) : total number of elements in array
;             ssparse(i) with i > 1 :indices of elements that have to
;                                    be set to 1 in the returned array
;  
; KEYWORD PARAMETERS:
;    DIMENSIONS: Setting this keywords reconstructs the original array
;                dimensions by using dimension information at the end
;                of ssparse. This information is structured like this:
;                 ssparse(ssparse(0)+2) : number of dimensions
;                 ssparse(ssparse(0)+2+i) : ith dimension
;  
; OUTPUTS:
;  A byte array set to 1 at indices ssparse(i) and 0 elsewhere.
;  
; RESTRICTIONS:
;  Type of returned array is always BYTE.
;  
; EXAMPLE:
;  IDL> a=[[0,1,1,0,1,1,1,0,0],[0,1,0,0,1,1,0,1,0]]  
;  IDL> print, sspassmacher(a)
;             9          18           1           2           4           5
;             6          10          13          14          16
;  IDL> print, sspassbeiseite(sspassmacher(a))
;     0   1   1   0   1   1   1   0   0   0   1   0   0   1   1   0   1   0
;  IDL> print, sspassbeiseite(sspassmacher(a,/DIM),/DIM)
;     0   1   1   0   1   1   1   0   0
;     0   1   0   0   1   1   0   1   0
;
; SEE ALSO:
;  <A HREF="#SSPASSMACHER">SSpassmacher</A>, <A HREF="#SPASSMACHER">Spassmacher</A>, <A HREF="#SPASSBEISEITE">SpassBeiseite</A>.
;
; MODIFICATION HISTORY:
;
;       $Log$
;       Revision 1.1  2000/08/01 16:33:15  thiel
;           Moved from SIMU/LAYERS dir and added dimensions support.
;
;       Revision 2.1  1997/09/19 16:35:32  thiel
;              Umfangreiche Umbenennung: von spass2vector nach SpassBeiseite
;                                        von vector2spass nach Spassmacher
;
;       Revision 2.1  1997/09/17 10:25:57  saam
;       Listen&Listen in den Trunk gemerged
;
;       Revision 1.1.2.4  1997/09/15 10:31:23  saam
;            Bugs korrigiert
;
;
;       Thu Sep 11 17:16:46 1997, Mirko Saam
;       <saam@ax1317.Physik.Uni-Marburg.DE>
;
;		Schoepfung und ausgiebiger Test, Version 1.1.2.1
;
;-



FUNCTION SSpassBeiseite, ssparse, DIMENSIONS=dimensions

   Default, dimensions, 0
   
   type = 1 ; BYTE, because only 0s and 1s have to be stored

   s = Size(ssparse)
   diminfoi = ssparse(0)+2 ; index of array where dimension info starts

   IF Keyword_Set(DIMENSIONS) THEN BEGIN
      ; if there are
      ; as many entries in ssparse(0) than in the whole array, then there
      ; can't be any dimension-information:
      IF s(s(0)) EQ diminfoi THEN $
       Message, 'No dimension information present.' $
      ELSE BEGIN
         ; generate array by specifying Size-information:
         ; first part of Size-array is stored at the end of sparse,
         ; overall elements are in sparse(1)
         a = Make_Array(SIZE= $
          [ssparse(diminfoi:diminfoi+ssparse(diminfoi)),type,ssparse(1)])
      ENDELSE
   ENDIF ELSE BEGIN
      ; conventional:
      a = Make_Array(ssparse(1), TYPE=type)
   ENDELSE

   ; put values in array:
   IF ssparse(0) NE 0 THEN $
    a(ssparse(2:diminfoi-1)) = 1
   
   RETURN, a
   

END
