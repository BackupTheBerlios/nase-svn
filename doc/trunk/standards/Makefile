#
# PURPOSE:  Master makefile for texing standards
#
# LOCATION: /neuro/cartman/user/saam/nase/doc/standards/
#
# TARGETS:  all           : makes the master dvi-file file
#           ps            : creates the master ps-file
#           clean         : delete all temporary files generated by latex/bibtex or whatever
#           real-clean    : makes clean and even deletes dvi-, ps-, bib-files
#
# AUTHOR:   saam
#
# DATE:     Thu Aug 24 10:29:40 CEST 2000
#
# MODIFICATION HISTORY:
#
#       $Log$
#       Revision 1.3  2000/09/26 14:05:27  saam
#       changes to directory structure
#
#       Revision 1.2  2000/09/21 10:09:16  saam
#             updated doc section
#
#       Revision 1.1  2000/08/24 10:01:32  saam
#             first version
#
#

# how is your file called that you want to latex?
# master without ending, nonps-pics with .bb-ending, ps-pics with .[e]ps-ending 
# without ".tex"-ending
MASTER = standards

# you can use arbitrary satellite tex files (eg. chapters in a phd-thesis)
# which have to be placed in separate subdirectories. An individual Makefile will care
# for their needs. Here, you just have to specify the name of the directories.
CLIENTS =

# with .bb ending; make searches then automatically for *.gif,  *.jpg, *.gif and *.tif
# For example, if you have an image called umbrella.jpg, you specify umbrella.bb
NONPS_PICS = 

# EPS-files must have a ".eps" ending
PS_PICS = 

# location of your original bibfile; this script will just generate a local copy
# full path, with ".bib"-ending
ORGBIB =  ~/pub/lit/complit.bib


# path where your bibstyles reside (no function, yet)
ORGBST = /neuro/neuro/saam/mytex/bibstyles

# sometimes you may want to specify some options but usually not
DVIPSOPTS =



#######################################################################
#######################################################################
## END OF USER MODIFICATIONS
#######################################################################
#######################################################################

MYBIB = $(MASTER).bib
MYTEX = $(MASTER).tex
MYDVI = $(MASTER).dvi
MYPS  = $(MASTER).ps

SHELL=/bin/bash

all: all-recursive $(MYDVI) 

$(MYDVI): $(MYTEX) $(MYBIB) $(NONPS_PICS) $(PS_PICS)

%.html: %.tex
	latex2html -split 0 -no_navigation -no_subdir -info '' $*
%.dvi: %.tex 
	ln -s ../header.pro ../header.pro.tex
	latex  $* 
	((grep bibcite $*.aux > /dev/null) && ( bibtex $* ; latex  $* ; latex  $* ) || true )
	((grep -i rerun *.log > /dev/null) && (latex $*) || true )
	((grep -i rerun *.log > /dev/null) && (latex $*) || true )
	exit 0

%.ps: %.dvi
	dvips -f $(DVIPSOPTS) < $< > $@ 


$(MYBIB): $(ORGBIB)
	@echo "##                                       " >  $(MYBIB)
	@echo "## WARNING                               " >> $(MYBIB)
	@echo "##                                       " >> $(MYBIB)
	@echo "## automatically generated from $(ORGBIB)" >> $(MYBIB)
	@echo "## don*t edit this file                  " >> $(MYBIB)
	@echo "##                                       " >> $(MYBIB)
	@cat $(ORGBIB)                                    >> $(MYBIB)

%.bb: %.gif
	convert $< eps:- | grep %%BoundingBox | uniq > $*.bb; touch $*.bb 
%.bb: %.bmp
	convert $< eps:- | grep %%BoundingBox | uniq > $*.bb; touch $*.bb  
%.bb: %.jpg
	convert $< eps:- | grep %%BoundingBox | uniq > $*.bb; touch $*.bb  
%.bb: %.tif
	convert $< eps:- | grep %%BoundingBox | uniq > $*.bb; touch $*.bb  

bbs: $(NONPS_PICS)


ps: $(MYPS)

clean: clean-recursive
	rm -f *.aux *.bbl *.blg *.cb *.flc *.log *~ *.bak *.tar.bz2 *.bb

real-clean: real-clean-recursive clean
	rm -f *.dvi *.ps *.bib; rm -Rf auto

# works but kind of risky
#dist: real-clean
#	rm  -f $(MASTER).tar.bz2         ;\
#	tar -cIvf $(MASTER).tar.bz2 *

all-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	list='$(CLIENTS)'; for subdir in $$list; do \
	  target=`echo $@ | sed s/-recursive//`; \
	  echo "Making $$target in $$subdir"; \
	  (cd $$subdir && $(MAKE) $$target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	list='$(CLIENTS)'; for subdir in $$list; do \
	  target=`echo $@ | sed s/-recursive//`; \
	  echo "Making $$target in $$subdir"; \
	  (cd $$subdir && $(MAKE) $$target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"


real-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	list='$(CLIENTS)'; for subdir in $$list; do \
	  target=`echo $@ | sed s/-recursive//`; \
	  echo "Making $$target in $$subdir"; \
	  (cd $$subdir && $(MAKE) $$target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
